# Copyright 2022 EngFlow Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

rust_library(
    name = "library",
    # We set these env vars to configure the RE Rust toolchain. Unfortunately the prelude does not provide a way to set these at the rust_toolchain level. We override the HOME location so rustp creates its `.rustp` directory in this location.
    env = {
        "RUSTUP_TOOLCHAIN":"/usr/local/rustup/toolchains/1.83.0-x86_64-unknown-linux-gnu",
        "HOME": "buck-out/",
    },
    srcs = glob(
        ["src/**/*.rs"],
    ),
    exec_compatible_with = ["//platforms:remote_platform"],
    default_target_platform = "//platforms:remote_platform",
)

rust_binary(
    name = "main",
    # We set these env vars to configure the RE Rust toolchain. Unfortunately the prelude does not provide a way to set these at the rust_toolchain level. We override the HOME location so rustp creates its `.rustp` directory in this location.
    env = {
        "RUSTUP_TOOLCHAIN":"/usr/local/rustup/toolchains/1.83.0-x86_64-unknown-linux-gnu",
        "HOME": "buck-out/",
    },
    srcs = glob(
        ["bin/**/*.rs"],
    ),    
    crate_root = "bin/main.rs",
    deps = [":library"],
    exec_compatible_with = ["//platforms:remote_platform"],
    default_target_platform = "//platforms:remote_platform",
)

rust_test(
    name = "test",
    srcs = glob(
        ["test/**/*.rs"],
    ),
    deps = [":library"],
    # We set these env vars to configure the RE Rust toolchain. Unfortunately the prelude does not provide a way to set these at the rust_toolchain level. We override the HOME location so rustp creates its `.rustp` directory in this location.
    env = {
        "RUSTUP_TOOLCHAIN":"/usr/local/rustup/toolchains/1.83.0-x86_64-unknown-linux-gnu",
        "HOME": "buck-out/",
    },
    exec_compatible_with = ["//platforms:remote_platform"],
    default_target_platform = "//platforms:remote_platform",
    remote_execution_action_key_providers = "//platforms:remote_execution_action_keys",
)