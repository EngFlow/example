# Options common for all EngFlow remote configurations.
common --noincompatible_check_sharding_support

build:engflow_common --jobs=40
build:engflow_common --define=EXECUTOR=remote
build:engflow_common --disk_cache=
build:engflow_common --incompatible_strict_action_env=true
build:engflow_common --remote_timeout=3600
build:engflow_common --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
build:engflow_common --grpc_keepalive_time=30s
build:engflow_common --legacy_important_outputs=false

# Platform-specific options for each supported platform.
build:remote --extra_execution_platforms=//platform
build:remote --host_platform=//platform
build:remote --platforms=//platform

# Options for private EngFlow clusters.
# To use on your own cluster, change the URLs to your own endpoint.
build:<your-cluster> --config=engflow_common
build:<your-cluster> --config=remote
build:<your-cluster> --config=<your-cluster>_bes
build:<your-cluster> --config=<your-cluster>_auth
build:<your-cluster> --remote_instance_name=example-oss
build:<your-cluster> --remote_executor=grpcs://<your-cluster>.cluster.engflow.com

build:<your-cluster>_bes --bes_backend=grpcs://<your-cluster>l.cluster.engflow.com
build:<your-cluster>_bes --bes_instance_name=example-oss
build:<your-cluster>_bes --bes_lifecycle_events
build:<your-cluster>_bes --bes_results_url=https://<your-cluster>.cluster.engflow.com/invocations/example-oss/


# To authenticate with the clusters above, create a .bazelrc.user file.
# This file is not checked into Git because it refers to local file system paths.
#
# It could contain (for example for mTLS authentication):
#
#     build:opal_auth --tls_client_certificate=/home/example/.engflow/opal/engflow.crt
#     build:opal_auth --tls_client_key=/home/example/.engflow/opal/engflow.key
#
# You can obtain an mTLS certificate by visiting the cluster's "Getting Started"
# page, after logging in.
try-import .bazelrc.user
